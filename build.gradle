buildscript {
    ext {
        minSdkVersion = 23
        targetSdkVersion = 29
        compileSdkVersion = 29

        kotlinVersion = "1.4.21"
        kotlinXVersion = "1.4.2"

        hiltVersion = '2.28.3-alpha'
        hiltAndroidXVersion = '1.0.0-alpha02'
        navigationVersion = '2.3.2'
        lifecycleVersion = '2.2.0'
        workVersion = '2.5.0-rc01'
        materialVersion = '1.2.1'
        playVersion = '17.5.0'
        roomVersion = '2.3.0-alpha04'
        retrofitVersion = '2.9.0'
        moshiVersion = '1.11.0'
        timberVersion = '4.7.1'

        junitVersion = '4.13.1'
    }
    repositories {
        google()
        jcenter()
        maven {url 'https://developer.huawei.com/repo/'}
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath 'org.owasp:dependency-check-gradle:6.1.0'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.2'

        // Huawei App Gallery Connect build plugin, only used for huawei build variant
        classpath 'com.huawei.agconnect:agcp:1.4.2.301'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://developer.huawei.com/repo/'
            content {
                includeGroupByRegex 'com\\.huawei.*'
            }
        }
    }

    apply plugin: 'org.owasp.dependencycheck'

    dependencyCheck {
        failBuildOnCVSS = 0
        suppressionFile = 'owasp_suppressions.xml'
        allprojects {
            configurations.all {
                if ((it.name.startsWith('sim') || it.name.startsWith('kapt') || it.name.startsWith('test') || it.name.startsWith('androidTest') || it.name.startsWith('lint')) && !(it.name in skipConfigurations)) {
                    skipConfigurations << it.name
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
