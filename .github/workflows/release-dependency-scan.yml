name: Check latest release dependencies

on:
  schedule:
    - cron:  "30 5 * * *" # this is utc time

jobs:
  release-dependency-scan:
    name: Owasp Release Dependency Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Checkout latest release
        run: |
          git fetch --all --tags --prune
          git checkout tags/$(git tag | sed '/-/d' | sort -t "." -k1,1n -k2,2n -k3,3n | tail -1) -b latest_release
      - name: Cache Gradle cache and wrapper
        uses: actions/cache@v2
        with:
          path: |
            gradle_home/caches
            gradle_home/wrapper
          key: ${{ runner.os }}-owasp-release-dependency-scan-with-gradle-${{ hashFiles('app/build.gradle') }}
      - name: OWASP dependency check
        uses: ./.github/docker-owasp-dependency-check-android
        env:
          GRADLE_HOME: "./gradle_home"
      - uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: dependency-check-result
          path: |
            ./build/reports/dependency-check-report.html
            ./app/build/reports/dependency-check-report.html
      - name: Notify to slack
        if: ${{ failure() }}
        uses: ./.github/docker-slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: "OWASP dependency check"
          status: ${{job.status}}
      - name: Notify by email
        if: ${{ failure() }}
        uses: ./.github/docker-notify-email
        env:
          API_KEY: ${{ secrets.EMAIL_SERVICE_API_KEY }}
          SEND_URL: ${{ secrets.EMAIL_SERVICE_SEND_URL }}
          RECIPIENTS: ${{ secrets.EMAIL_SERVICE_RECIPIENTS }}
          FROM: ${{ secrets.EMAIL_SERVICE_SENDER }}
        with:
          status: ${{job.status}}
